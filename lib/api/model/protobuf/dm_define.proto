syntax = "proto3";

package bilibili.community.service.dm.v1;

service DM {
    rpc DmSegMobile (DmSegMobileReq) returns (DmSegMobileReply);
    rpc DmView (DmViewReq) returns (DmViewReply);
    rpc DmPlayerConfig (DmPlayerConfigReq) returns (Response);
    rpc DmSegOtt(DmSegOttReq) returns(DmSegOttReply);
    rpc DmSegSDK(DmSegSDKReq) returns(DmSegSDKReply);
    rpc DmExpoReport (DmExpoReportReq) returns (DmExpoReportRes);
}

message BuzzwordConfig {
    repeated BuzzwordShowConfig keywords = 1;
}

message BuzzwordShowConfig {
    string name = 1;
    string schema = 2;
    int32 source = 3;
    int64 id = 4;
    int64 buzzword_id = 5;
    int32 schema_type = 6;
}

message CommandDm {
    int64 id = 1;
    int64 oid = 2;
    string mid = 3;
    string command = 4;
    string content = 5;
    int32 progress = 6;
    string ctime = 7;
    string mtime = 8;
    string extra = 9;
    string idStr = 10;
}

enum DMAttrBit {
    DMAttrBitProtect = 0;  
    DMAttrBitFromLive = 1; 
    DMAttrHighLike = 2;   
}

message DanmakuAIFlag {
    repeated DanmakuFlag dm_flags = 1;
}

message DanmakuElem {
    int64 id = 1;
    int32 progress = 2;
    int32 mode = 3;
    int32 fontsize = 4;
    uint32 color = 5;
    string midHash = 6;
    string content = 7;
    int64 ctime = 8;
    int32 weight = 9;
    string action = 10;
    int32 pool = 11;
    string idStr = 12;
    int32 attr = 13;
}

message DanmakuFlag {
    int64 dmid = 1; 
    uint32 flag = 2;
}

message DanmakuFlagConfig {
    int32 rec_flag = 1;
    string rec_text = 2;
    int32 rec_switch = 3;
}

message DanmuDefaultPlayerConfig {
    bool player_danmaku_use_default_config = 1;   
    bool player_danmaku_ai_recommended_switch = 4;
    int32 player_danmaku_ai_recommended_level = 5;
    bool player_danmaku_blocktop = 6;          
    bool player_danmaku_blockscroll = 7; 
    bool player_danmaku_blockbottom = 8;
    bool player_danmaku_blockcolorful = 9; 
    bool player_danmaku_blockrepeat = 10; 
    bool player_danmaku_blockspecial = 11;         
    float player_danmaku_opacity = 12;             
    float player_danmaku_scalingfactor = 13;       
    float player_danmaku_domain = 14;              
    int32 player_danmaku_speed = 15;               
    bool inline_player_danmaku_switch = 16;        
    int32 player_danmaku_senior_mode_switch = 17;  
}


message DanmuPlayerConfig {
    bool player_danmaku_switch = 1;                
    bool player_danmaku_switch_save = 2;           
    bool player_danmaku_use_default_config = 3;    
    bool player_danmaku_ai_recommended_switch = 4; 
    int32 player_danmaku_ai_recommended_level = 5; 
    bool player_danmaku_blocktop = 6;              
    bool player_danmaku_blockscroll = 7;           
    bool player_danmaku_blockbottom = 8;           
    bool player_danmaku_blockcolorful = 9;         
    bool player_danmaku_blockrepeat = 10;          
    bool player_danmaku_blockspecial = 11;         
    float player_danmaku_opacity = 12;             
    float player_danmaku_scalingfactor = 13;       
    float player_danmaku_domain = 14;              
    int32 player_danmaku_speed = 15;               
    bool player_danmaku_enableblocklist = 16;      
    bool inline_player_danmaku_switch = 17;        
    int32 inline_player_danmaku_config = 18;       
    int32 player_danmaku_ios_switch_save = 19;     
    int32 player_danmaku_senior_mode_switch = 20;  
}


message DanmuPlayerDynamicConfig {
    
    int32 progress = 1;
    
    float player_danmaku_domain = 14;
}


message DanmuPlayerViewConfig {
    
    DanmuDefaultPlayerConfig danmuku_default_player_config = 1;
    
    DanmuPlayerConfig danmuku_player_config = 2;
    
    repeated DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;
}


message DanmuWebPlayerConfig {
    bool dm_switch = 1;            
    bool ai_switch = 2;            
    int32 ai_level = 3;            
    bool blocktop = 4;             
    bool blockscroll = 5;          
    bool blockbottom = 6;          
    bool blockcolor = 7;           
    bool blockspecial = 8;         
    bool preventshade = 9;         
    bool dmask = 10;               
    float opacity = 11;            
    int32 dmarea = 12;             
    float speedplus = 13;          
    float fontsize = 14;           
    bool screensync = 15;          
    bool speedsync = 16;           
    string fontfamily = 17;        
    bool bold = 18;                
    int32 fontborder = 19;         
    string draw_type = 20;         
    int32 senior_mode_switch = 21; 
}


message DmExpoReportReq {
    
    string session_id = 1;
    
    int64 oid = 2;
    
    string spmid = 4;
}


message DmExpoReportRes {

}


message DmPlayerConfigReq {
    int64 ts = 1;                                               
    PlayerDanmakuSwitch switch = 2;                             
    PlayerDanmakuSwitchSave switch_save = 3;                    
    PlayerDanmakuUseDefaultConfig use_default_config = 4;       
    PlayerDanmakuAiRecommendedSwitch ai_recommended_switch = 5; 
    PlayerDanmakuAiRecommendedLevel ai_recommended_level = 6;   
    PlayerDanmakuBlocktop blocktop = 7;                         
    PlayerDanmakuBlockscroll blockscroll = 8;                   
    PlayerDanmakuBlockbottom blockbottom = 9;                   
    PlayerDanmakuBlockcolorful blockcolorful = 10;              
    PlayerDanmakuBlockrepeat blockrepeat = 11;                  
    PlayerDanmakuBlockspecial blockspecial = 12;                
    PlayerDanmakuOpacity opacity = 13;                          
    PlayerDanmakuScalingfactor scalingfactor = 14;              
    PlayerDanmakuDomain domain = 15;                            
    PlayerDanmakuSpeed speed = 16;                              
    PlayerDanmakuEnableblocklist enableblocklist = 17;          
    InlinePlayerDanmakuSwitch inlinePlayerDanmakuSwitch = 18;   
    PlayerDanmakuSeniorModeSwitch senior_mode_switch = 19;      
}


message DmSegConfig {
    
    int64 page_size = 1;
    
    int64 total = 2;
}


message DmSegMobileReply {
    
    repeated DanmakuElem elems = 1;
    
    
    int32 state = 2;
    
    DanmakuAIFlag ai_flag = 3;
}


message DmSegMobileReq {
    
    int64 pid = 1;
    
    int64 oid = 2;
    
    
    int32 type = 3;
    
    int64 segment_index = 4;
    
    int32 teenagers_mode = 5;
}


message DmSegOttReply {
    
    
    bool closed = 1;
    
    repeated DanmakuElem elems = 2;
}


message DmSegOttReq {
    
    int64 pid = 1;
    
    int64 oid = 2;
    
    
    int32 type = 3;
    
    int64 segment_index = 4;
}


message DmSegSDKReply {
    
    
    bool closed = 1;
    
    repeated DanmakuElem elems = 2;
}


message DmSegSDKReq {
    
    int64 pid = 1;
    
    int64 oid = 2;
    
    
    int32 type = 3;
    
    int64 segment_index = 4;
}


message DmViewReply {
    
    
    bool closed = 1;
    
    VideoMask mask = 2;
    
    VideoSubtitle subtitle = 3;
    
    repeated string special_dms = 4;
    
    DanmakuFlagConfig ai_flag = 5;
    
    DanmuPlayerViewConfig player_config = 6;
    
    int32 send_box_style = 7;
    
    bool allow = 8;
    
    string check_box = 9;
    
    string check_box_show_msg = 10;
    
    string text_placeholder = 11;
    
    string input_placeholder = 12;
    
    repeated string report_filter_content = 13;
    
    ExpoReport expo_report = 14;
    
    BuzzwordConfig buzzword_config = 15;
    
    repeated Expressions expressions = 16;
}


message DmViewReq {
    
    int64 pid = 1;
    
    int64 oid = 2;
    
    
    int32 type = 3;
    
    string spmid = 4;
    
    int32 is_hard_boot = 5;
}


message DmWebViewReply {
    
    
    int32 state = 1;
    
    string text = 2;
    
    string text_side = 3;
    
    DmSegConfig dm_sge = 4;
    
    DanmakuFlagConfig flag = 5;
    
    repeated string special_dms = 6;
    
    bool check_box = 7;
    
    int64 count = 8;
    
    repeated CommandDm commandDms = 9;
    
    DanmuWebPlayerConfig player_config = 10;
    
    repeated string report_filter_content = 11;
    
    repeated Expressions expressions = 12;
}


message ExpoReport {
    
    bool should_report_at_end = 1;
}


message Expression {
    
    repeated string keyword = 1;
    
    string url = 2;
    
    repeated Period period = 3;
}


message Expressions {
    
    repeated Expression data = 1;
}


message Period {
    
    int64 start = 1;
    
    int64 end = 2;
}


message InlinePlayerDanmakuSwitch {bool value = 1;}

message PlayerDanmakuAiRecommendedLevel {bool value = 1;}

message PlayerDanmakuAiRecommendedSwitch {bool value = 1;}

message PlayerDanmakuBlockbottom {bool value = 1;}

message PlayerDanmakuBlockcolorful {bool value = 1;}

message PlayerDanmakuBlockrepeat {bool value = 1;}

message PlayerDanmakuBlockscroll {bool value = 1;}

message PlayerDanmakuBlockspecial {bool value = 1;}

message PlayerDanmakuBlocktop {bool value = 1;}

message PlayerDanmakuDomain {float value = 1;}

message PlayerDanmakuEnableblocklist {bool value = 1;}

message PlayerDanmakuOpacity {float value = 1;}

message PlayerDanmakuScalingfactor {float value = 1;}

message PlayerDanmakuSeniorModeSwitch {int32 value = 1;}

message PlayerDanmakuSpeed {int32 value = 1;}

message PlayerDanmakuSwitch {bool value = 1;bool canIgnore = 2;}

message PlayerDanmakuSwitchSave {bool value = 1;}

message PlayerDanmakuUseDefaultConfig {bool value = 1;}


message Response {
    
    int32 code = 1;
    
    string message = 2;
}


message SubtitleItem {
    
    int64 id = 1;
    
    string id_str = 2;
    
    string lan = 3;
    
    string lan_doc = 4;
    
    string subtitle_url = 5;
    
    UserInfo author = 6;
    
    SubtitleType type = 7;
}

enum SubtitleType {
    CC = 0; 
    AI = 1; 
}


message UserInfo {
    
    int64 mid = 1;
    
    string name = 2;
    
    string sex = 3;
    
    string face = 4;
    
    string sign = 5;
    
    int32 rank = 6;
}


message VideoMask {
    
    int64 cid = 1;
    
    
    int32 plat = 2;
    
    int32 fps = 3;
    
    int64 time = 4;
    
    string mask_url = 5;
}


message VideoSubtitle {
    
    string lan = 1;
    
    string lanDoc = 2;
    
    repeated SubtitleItem subtitles = 3;
}
